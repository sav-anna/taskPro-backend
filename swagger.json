{
  "openapi": "3.0.3",
  "info": {
    "title": "TaskPro API docs",
    "description": "This is the documentation of the TaskPro API backend, which is developed for the TaskPro web application.\n\nThe TaskPro backend API is built on Node.js (version 12 or higher) using the Express.js, API and Mongoose, Cloudinary to interact with the MongoDB database.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://taskpro-m75b.onrender.com/api"
    }
  ],
  "tags": [
    {
      "name": "Help"
    },
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Board",
      "description": "Boards endpoints"
    }
  ],
  "paths": {
    "/help": {
      "post": {
        "tags": [
          "Help"
        ],
        "summary": "Need help",
        "description": "Sending an email asking for help to technical support. Only authorized user can send",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Help"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message successfully sent"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create user",
        "description": "Created new user object",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successful created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email already in use"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "User is logged in successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password invalid"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs out current logged in user session",
        "description": "The current user must have a token",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout success"
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get some information about the current user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/{userId}": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Update profile user (name or/and password or/and email or/and avatar)",
        "operationId": "getUserById",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Id of the current user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "form-data",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Update TaskPro Web application theme",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Theme successful update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          },
          "400": {
            "description": "theme\\\" is required"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Help": {
        "type": "object",
        "required": [
          "email",
          "message"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "user@email.com"
          },
          "message": {
            "type": "string",
            "example": "I need help with boards and tasks"
          }
        }
      },
      "UserRegister": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Username"
          },
          "email": {
            "type": "string",
            "example": "user@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64cc2a7ce27e1e859f7c887b"
          },
          "name": {
            "type": "string",
            "example": "Username"
          },
          "email": {
            "type": "string",
            "example": "user@email.com"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "user@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          }
        }
      },
      "UserLoginResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64ca36b5d2a58e01f84482ce"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0Y2JkZGU2ZjA4NDViZDA2ZWMzNWIwNCIsImlhdCI6MTY5MTA4ODkxOSwiZXhwIjoxNjkxMTcxNzE5fQ."
          },
          "theme": {
            "type": "string",
            "example": "Dark"
          },
          "avatar": {
            "type": "string",
            "description": "avatarURL"
          },
          "name": {
            "type": "string",
            "example": "Username"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UserUpdateResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Username"
          },
          "email": {
            "type": "string",
            "example": "user@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          },
          "avatar": {
            "type": "string",
            "example": "https://cloudinary.com/..."
          }
        }
      },
      "Theme": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "example": "Violet"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}